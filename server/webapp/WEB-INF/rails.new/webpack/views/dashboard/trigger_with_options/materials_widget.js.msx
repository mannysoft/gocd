/*
 * Copyright 2018 ThoughtWorks, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


const m = require('mithril');
const _ = require('lodash');

const MaterialInfoWidget = require('views/dashboard/trigger_with_options/material_info_widget');

const MaterialsForTriggerWidget = {
  oninit(vnode) {
    const self = vnode.state;

    self.activeClassForMaterial = (materialName) => {
      return vnode.attrs.vm().isMaterialSelected(materialName) ? 'active' : '';
    };

    self.shouldMaterialContentBeVisible = (materialName) => {
      return vnode.attrs.vm().isMaterialSelected(materialName);
    };
  },

  view(vnode) {
    const self = vnode.state;
    const vm   = vnode.attrs.vm();

    const materialHeadings = _.map(vnode.attrs.materials, (material) => {
      const name = material.name;

      return (
        <li class={self.activeClassForMaterial(name)}
            onclick={vm.selectMaterial.bind(vm, name)}>
          <div>{material.revision.lastRunRevision}</div>
          <div>{material.name}</div>
        </li>
      );
    });

    const materialThatShouldBeVisible = _.find(vnode.attrs.materials, (material) => {
      return self.shouldMaterialContentBeVisible(material.name);
    });

    return (
      <div class="v-tab">
        <ul class="v-tab_tab-head">
          {materialHeadings}
        </ul>

        <div class="v-tab_container">
          <MaterialInfoWidget key={materialThatShouldBeVisible.name}
                              material={materialThatShouldBeVisible}
                              searchVM={vnode.attrs.searchVM[materialThatShouldBeVisible.name]}/>
        </div>
      </div>);
  }
};

module.exports = MaterialsForTriggerWidget;

